{"ast":null,"code":"var _jsxFileName = \"/Users/natalie/Development/code/Projects/earth-gallery-project/src/components/ItemsContainer.js\";\nimport react from \"react\";\nimport ItemCard from \"./ItemCard\"; // If I don't include a default prop here, my map doesn't work. Why do I have an undefined itemsArray if I set my default state to [] in App?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItemsContainer({\n  itemsArray = []\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ItemsContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), itemsArray.map(item => {\n      return /*#__PURE__*/_jsxDEV(ItemCard, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 40\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ItemsContainer;\nexport default ItemsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsContainer\");","map":{"version":3,"sources":["/Users/natalie/Development/code/Projects/earth-gallery-project/src/components/ItemsContainer.js"],"names":["react","ItemCard","ItemsContainer","itemsArray","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;;AACA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,UAAU,GAAG;AAAf,CAAxB,EAA6C;AAC3C,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,UAAU,CAACC,GAAX,CAAeC,IAAI,IAAI;AAAE,0BAAO,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AAA8C,KAAvE,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQJ,c;AAUT,eAAeA,cAAf","sourcesContent":["import react from \"react\"\nimport ItemCard from \"./ItemCard\"\n\n// If I don't include a default prop here, my map doesn't work. Why do I have an undefined itemsArray if I set my default state to [] in App?\nfunction ItemsContainer({ itemsArray = [] } ){\n  return(\n    <div className=\"cards-container\">\n      <h2>ItemsContainer</h2>\n      {itemsArray.map(item => { return <ItemCard key={item.id} item={item}/> })}\n    </div>\n\n  )\n}\n\nexport default ItemsContainer;"]},"metadata":{},"sourceType":"module"}