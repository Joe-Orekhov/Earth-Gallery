{"ast":null,"code":"var _jsxFileName = \"/Users/natalie/Development/code/Projects/earth-gallery-project/src/components/ItemsContainer.js\",\n    _s = $RefreshSig$();\n\nimport react from \"react\";\nimport ItemCard from \"./ItemCard\";\nimport NewItemCard from \"./NewItemCard\";\nimport { useLocation } from \"react-router-dom\"; // If I don't include a default prop here, my map doesn't work. Why do I have an undefined itemsArray if I set my default state to [] in App?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItemsContainer({\n  displayedItems = [],\n  buttonText,\n  handleClick,\n  selectUser,\n  performDelete\n}) {\n  _s();\n\n  // the below will help us get the pathname so we can conditionally render according to our route\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards-container\",\n    children: [location.pathname === \"/sell\" ? /*#__PURE__*/_jsxDEV(NewItemCard, {\n      buttonText: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 40\n    }, this) : null, displayedItems.map(item => {\n      return /*#__PURE__*/_jsxDEV(ItemCard, {\n        item: item,\n        selectUser: selectUser,\n        buttonText: buttonText,\n        buttonValue: location.pathname === \"/sell\" ? \"edit\" : \"addToCart\",\n        handleClick: handleClick,\n        performDelete: performDelete\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemsContainer, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = ItemsContainer;\nexport default ItemsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsContainer\");","map":{"version":3,"sources":["/Users/natalie/Development/code/Projects/earth-gallery-project/src/components/ItemsContainer.js"],"names":["react","ItemCard","NewItemCard","useLocation","ItemsContainer","displayedItems","buttonText","handleClick","selectUser","performDelete","location","pathname","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,cAAc,GAAG,EAAnB;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA,WAAnC;AAAgDC,EAAAA,UAAhD;AAA4DC,EAAAA;AAA5D,CAAxB,EAAqG;AAAA;;AAGnG;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,eAEGO,QAAQ,CAACC,QAAT,KAAsB,OAAtB,gBAAgC,QAAC,WAAD;AAAa,MAAA,UAAU,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAhC,GAAwE,IAF3E,EAGGN,cAAc,CAACO,GAAf,CAAmBC,IAAI,IAAI;AAC1B,0BAAQ,QAAC,QAAD;AAEN,QAAA,IAAI,EAAEA,IAFA;AAGN,QAAA,UAAU,EAAEL,UAHN;AAGkB,QAAA,UAAU,EAAEF,UAH9B;AAG0C,QAAA,WAAW,EAAEI,QAAQ,CAACC,QAAT,KAAsB,OAAtB,GAAgC,MAAhC,GAAyC,WAHhG;AAG6G,QAAA,WAAW,EAAEJ,WAH1H;AAGuI,QAAA,aAAa,EAAEE;AAHtJ,SACDI,IAAI,CAACC,EADJ;AAAA;AAAA;AAAA;AAAA,cAAR;AAGgL,KAJjL,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjBQV,c;UAIUD,W;;;KAJVC,c;AAmBT,eAAeA,cAAf","sourcesContent":["import react from \"react\"\nimport ItemCard from \"./ItemCard\"\nimport NewItemCard from \"./NewItemCard\"\nimport { useLocation } from \"react-router-dom\";\n\n// If I don't include a default prop here, my map doesn't work. Why do I have an undefined itemsArray if I set my default state to [] in App?\n\nfunction ItemsContainer({ displayedItems = [], buttonText, handleClick, selectUser, performDelete } ){\n\n\n  // the below will help us get the pathname so we can conditionally render according to our route\n  const location = useLocation();\n\n  return(\n    <div className=\"cards-container\">\n\n      {location.pathname === \"/sell\" ? <NewItemCard buttonText={\"Add New\"}/> : null}\n      {displayedItems.map(item => { \n        return (<ItemCard \n          key={item.id} \n          item={item} \n          selectUser={selectUser} buttonText={buttonText} buttonValue={location.pathname === \"/sell\" ? \"edit\" : \"addToCart\"} handleClick={handleClick} performDelete={performDelete}/>)} )}\n    </div>\n  )\n}\n\nexport default ItemsContainer;"]},"metadata":{},"sourceType":"module"}